image: docker:stable

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  # Server latest, branch and Release image
  DOCKER_IMAGE: ${CI_REGISTRY_IMAGE}:develop
  DOCKER_IMAGE_B: ${CI_REGISTRY_IMAGE}/$CI_COMMIT_REF_NAME:latest
  DOCKER_IMAGE_B_SHA: ${CI_REGISTRY_IMAGE}/$CI_COMMIT_REF_NAME:${CI_COMMIT_SHORT_SHA}
  # React libs directory
  REACT_STORE_DIR: ./src/vendor/react-store


services:
  - docker:dind


stages:
  - build
  - deploy


before_script:
  - apk update && apk add git && git --version
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - get_image() { [[ "$(docker images -q ${1} 2> /dev/null)" != "" ]] && echo ${1} || echo ${2}; }
  # Pull base docker image
  - |
    docker pull ${DOCKER_IMAGE_B_SHA}\
    || docker pull ${DOCKER_IMAGE_B}\
    || docker pull ${DOCKER_IMAGE}\
    || true

build:
  stage: build
  script:
    # clone libs
    - mkdir -p $(dirname "${REACT_STORE_DIR}")
    - git clone https://github.com/toggle-corp/react-store.git --branch bipad ${REACT_STORE_DIR}
    # Build docker image
    - |
      docker build\
        --cache-from $(get_image ${DOCKER_IMAGE_B} ${DOCKER_IMAGE})\
        --tag ${DOCKER_IMAGE_B}\
        --tag ${DOCKER_IMAGE_B_SHA} .
    - docker push ${DOCKER_IMAGE_B_SHA}

pages:
  stage: deploy
  script:
    - env > .env
    - |
      docker run -t\
        -v `pwd`/.env:/code/.env\
        -v `pwd`/build:/code/build\
        ${DOCKER_IMAGE_B_SHA}\
        sh -c 'export CI=true && yarn install && yarn build'
    - rm -rf public
    - mv ./build ./public
    - cp ./public/index.html ./public/404.html
  artifacts:
    paths:
    - public
  only:
  - gl-pages
