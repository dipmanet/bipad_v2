import React from 'react';
import { connect } from 'react-redux';
import { _cs } from '@togglecorp/fujs';

import {
    ResponsiveContainer,
    XAxis,
    YAxis,
    BarChart,
    Bar,
    ReferenceLine,
    Brush,
} from 'recharts';

import Modal from '#rscv/Modal';
import ModalHeader from '#rscv/Modal/Header';
import ModalBody from '#rscv/Modal/Body';

import { municipalitiesMapSelector } from '#selectors';


import Button from '#rsca/Button';

import styles from './styles.scss';

interface Props {
    className?: string;
}

const mapStateToProps = state => ({
    municipalities: municipalitiesMapSelector(state),
});


class VulnerabilityVisualizations extends React.PureComponent<Props> {
    private getAverage = (data, dataIndicator) => {
        if (!data || data.length === 0) {
            return 0;
        }

        let sum = 0;
        data.forEach((d) => { sum += d.data[dataIndicator]; });

        return sum / data.length;
    }

    private getSortedData = (data) => {
        const sortedData = [...data];
        sortedData.sort((a, b) => b - a);
    }

    public render() {
        const {
            data,
            className,
            closeModal,
            selectedIndicator,
            municipalities,
        } = this.props;

        const average = this.getAverage(data, selectedIndicator);
        const dataIndicator = `data.${selectedIndicator}`;

        return (
            <Modal className={_cs(className, styles.vulnerabilityVisualizations)}>
                <ModalHeader
                    title="Visualizations"
                    rightComponent={(
                        <Button
                            iconName="close"
                            onClick={closeModal}
                        />
                    )}
                />
                <ModalBody className={styles.body}>
                    <ResponsiveContainer className={styles.visualizationContainer}>
                        <BarChart
                            data={data}
                            layout="vertical"
                        >
                            <Brush
                                tickFormatter={d => municipalities[d].title}
                                dataKey="municipality"
                                height={30}
                                stroke="#9dc6e0"
                                endIndex={30}
                            />
                            <Bar
                                layout="vertical"
                                dataKey={dataIndicator}
                                fill="#9dc6e0"
                            />
                            <XAxis
                                dataKey={dataIndicator}
                                type="number"
                            />
                            <YAxis
                                tickFormatter={d => municipalities[d].title}
                                dataKey="municipality"
                                type="category"
                                width={200}
                            />
                            <ReferenceLine
                                x={average}
                                label="National average"
                            />
                        </BarChart>
                    </ResponsiveContainer>
                </ModalBody>
            </Modal>
        );
    }
}

export default connect(mapStateToProps)(VulnerabilityVisualizations);
